grammar XPath;

/*Any expression generated by the following context-free grammar is a vaild
XPath expression*/

/*  absolute path
    ap -> doc(fileName)/rp
          doc(fileName)//rp    */
doc
	: 'doc' '(' FPath ')'         # ApDoc
    ;

ap
	: doc '/' rp                  # ApPath
	| doc '//' rp                 # ApPath
	;

/*  relative path
    rp -> tagName| * | .| ..| text()| @attName
        | (rp) | rp1/rp2 | rp1//rp2 | rp[f] | rp1,rp2  */
rp
	: NAME                         # TagName
	| '.'                          # Current
	| '..'                         # Parent
	| '*'                          # AllChildren
	| 'text()'                     # Txt
	| '@' NAME                     # Attribute
	| '(' rp ')'                   # RpwithP
	| rp '/' rp                    # RpChildren
	| rp '//' rp                   # RpDescendent
	| rp '[' filter ']'            # RpFilter
	| rp ',' rp                    # TwoRp
	;

/*  path filter
    f â†’ rp| rp1 =rp2 | rp1 eq rp2 |rp1 ==rp2 |rp1 is rp2
        | (f)| f1 and f2 | f1 or f2| not f
*/
filter
	: rp                           # FltRp
	| rp '=' rp                    # FltEqual
	| rp 'eq' rp                   # FltEqual
	| rp '==' rp                   # FltIs
	| rp 'is' rp                   # FltIs
	| '(' filter ')'               # FltwithP
	| filter 'and' filter          # FltAnd
	| filter 'or' filter           # FltOr
	| 'not' filter                 # FltNot
	;

FPath : '"' (~'"')* '"';
DOC: 'doc' ;
NAME: [a-zA-Z0-9_-]+;
WhiteSpace: [ \n\t\r]+ -> skip; // debug PA1: added to ignore whitespace