// finds act, scene and speaker of famous 
// line "Et tu, Brute! Then fall, Caesar."
<result>{
for $a in doc("j_caesar.xml")//ACT,
    $sc in $a//SCENE,
    $sp in $sc/SPEECH
where $sp/LINE/text() = "Et tu, Brute! Then fall, Caesar."
return <who>{$sp/SPEAKER/text()}</who>,
       <when>{
              <act>{$a/TITLE/text()}</act>,
             <scene>{$sc/TITLE/text()}</scene>
              }
       </when>
}</result>


RESULT:
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
  <result>
    <who>CAESAR</who>
    <when>
      <act>ACT III</act>
      <scene>SCENE I.  Rome. Before the Capitol; the Senate sitting above.</scene>
    </when>
  </result>
</root>



################################################################
XQuery #1 
<acts> { for $a in doc("j_caesar.xml")//ACT

              where empty ( for $sp in $a/SCENE/SPEECH/SPEAKER

                                      where $sp/text() = "CASCA" 

                                     return <speaker> {$sp/text()}</speaker> 

                                     )

              return <act>{$a/TITLE/text()}</act>

}</acts>


RESULT:
<acts>
<act>ACT IV</act>
<act>ACT V</act>
</acts>





################################################################
XQuery #2
<result>{  for $a in (for $s in doc("j_caesar.xml")//ACT return $s), 

                     $sc in (for $t in $a/SCENE return $t),

                     $sp in (for $d in $sc/SPEECH return $d)

                 where $sp/LINE/text() = "Et tu, Brute! Then fall, Caesar."

                 return <who>{$sp/SPEAKER/text()}</who>,

                           <when>{

                                           <act>{$a/TITLE/text()}</act>,

                                           <scene>{$sc/TITLE/text()}</scene>

                           }</when>

}
</result>


RESULT:

<result>
<who>CAESAR</who>
<when>
<act>ACT III</act>
<scene>SCENE I. Rome. Before the Capitol; the Senate sitting above.</scene>
</when>
</result>





################################################################
XQuery #3
<result>{ for $a in doc("j_caesar.xml")//PERSONAE, $b in $a/PERSONA

               where ($b/text() = "JULIUS CAESAR") or ($b/text()= "Another Poet")

               return $b

             }

</result>

 


RESULT:

<result>
<PERSONA>Another Poet</PERSONA>
<PERSONA>JULIUS CAESAR</PERSONA>
</result>



 
################################################################
XQuery #4
<result>

{

for $a in doc("j_caesar.xml")//PERSONAE, $b in $a/PERSONA 

where not (($b/text() = "JULIUS CAESAR") or ($b/text() = "Another Poet") )

return $b

}

</result>




RESULT
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
  <result>
    <PERSONA>ARTEMIDORUS Of Cnidos, a teacher of rhetoric. </PERSONA>
    <PERSONA>A Soothsayer</PERSONA>
    <PERSONA>CINNA, a poet. </PERSONA>
    <PERSONA>PINDARUS, servant to Cassius.</PERSONA>
    <PERSONA>CALPURNIA, wife to Caesar.</PERSONA>
    <PERSONA>PORTIA, wife to Brutus.</PERSONA>
    <PERSONA>Senators, Citizens, Guards, Attendants, &amp;c.</PERSONA>
  </result>
</root>

